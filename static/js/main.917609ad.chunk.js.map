{"version":3,"sources":["components/layout/Layout.js","logic/functions.js","logic/reducers.js","logic/actions.js","components/home/Home.js","components/question_handler/question_list/QuestionList.js","components/question_handler/question_form/QuestionForm.js","components/question_handler/QuestionHandler.js","components/game/Quiz.js","components/game/Game.js","Router.js","App.js","index.js","logic/configureStore.js"],"names":["Layout","props","className","children","getQuestions","questions","localStorage","getItem","JSON","parse","getHighscores","highscores","sort","a","b","score","getInitialState","activeQuestions","points","save","payload","array","push","toSave","stringify","setItem","data","deleteQuestion","index","i","length","id","splice","answer","selected","correct","nextQuestion","addNewScore","resetHighscores","removeItem","combineReducer","combineReducers","state","action","type","rootReducer","resetReducer","Home","Header","as","textAlign","icon","Icon","size","name","Content","Segment","Grid","columns","Column","to","Button","labelPosition","Divider","vertical","Highscores","useSelector","dispatch","useDispatch","Message","compact","content","style","width","Table","celled","HeaderCell","Body","map","h","Row","Cell","onClick","DeleteModal","useState","open","setOpen","Modal","closeOnEscape","closeOnDimmerClick","trigger","basic","Actions","color","inverted","question","QuestionModal","q","query","closeIcon","first","third","second","fourth","date","QuestionList","header","List","verticalAlign","Item","key","floated","Description","QuestionForm","handleChange","e","value","setState","onSave","validateForm","_id","Math","random","toString","substr","_date","Date","toLocaleDateString","onReset","error","includes","bind","this","finalizeQuestion","Card","Form","Input","onChange","fluid","label","placeholder","Group","widths","Radio","checked","React","Component","connect","QuestionHandler","Quiz","onSelectAnswer","selectedAnswer","clickAnswer","answered","randQuestion","component","endGame","setTimeout","openModal","clickNext","floor","onAnswer","next_question","EndGameModal","questionsLength","percent","addScore","Game","onStart","reset","gameStarted","Label","Popup","position","disabled","AppRouter","path","exact","render","App","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.917609ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Layout(props) {\r\n    return (\r\n        <div className='ui container'>\r\n            { props.children }\r\n        </div>\r\n    )\r\n}","//Starting state\r\nconst getQuestions = () => {\r\n    let questions = [];\r\n    if (localStorage.getItem('questions')) {\r\n        questions = JSON.parse(localStorage.getItem('questions'));\r\n    }\r\n\r\n    return questions;\r\n}\r\n\r\nconst getHighscores = () => {\r\n    let highscores = [];\r\n    if (localStorage.getItem('quiz_scores')) {\r\n        highscores = JSON.parse(localStorage.getItem('quiz_scores'));\r\n    }\r\n\r\n    highscores.sort(function(a,b) {\r\n        return b.score - a.score;\r\n    });\r\n\r\n    return highscores;\r\n}\r\n\r\nexport const getInitialState = () => ({\r\n    questions: getQuestions(),\r\n    activeQuestions: getQuestions(),\r\n    points: 0,\r\n    highscores: getHighscores(),\r\n})\r\n\r\n//Functions\r\nexport function save(questions, payload) {\r\n    let array = [];\r\n\r\n    if (!localStorage.getItem('questions')) {\r\n        array.push(payload);\r\n        const toSave = JSON.stringify(array);\r\n        localStorage.setItem('questions', toSave);\r\n    }\r\n    else {\r\n        array = JSON.parse(localStorage.getItem('questions'));\r\n        array.push(payload);\r\n        const toSave = JSON.stringify(array);\r\n        localStorage.setItem('questions', toSave);\r\n    }\r\n\r\n    const data = localStorage.getItem('questions');\r\n    questions = JSON.parse(data);\r\n\r\n    return questions;\r\n}\r\n\r\nexport function deleteQuestion(questions, payload) {\r\n    let array = JSON.parse(localStorage.getItem('questions'));\r\n    let index = 0;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (array[i].id === payload) {index = i}\r\n    }\r\n\r\n    array.splice(index, 1);\r\n    const toSave = JSON.stringify(array);\r\n    localStorage.setItem('questions', toSave);\r\n\r\n    const data = localStorage.getItem('questions');\r\n    questions = JSON.parse(data);\r\n\r\n\r\n    return questions;\r\n}\r\n\r\nexport function answer(points, payload) {\r\n    if (payload.selected === payload.correct) points++;\r\n\r\n    return points;\r\n}\r\n\r\nexport function nextQuestion(activeQuestions, payload) {\r\n    let index = 0;\r\n\r\n    for (let i = 0; i < activeQuestions.length; i++) {\r\n        if (activeQuestions[i].id === payload) {index = i}\r\n    }\r\n\r\n    activeQuestions.splice(index, 1);\r\n\r\n    return activeQuestions;\r\n}\r\n\r\nexport function addNewScore(highscores, payload) {\r\n    let array = [];\r\n\r\n    if (!localStorage.getItem('quiz_scores')) {\r\n        array.push(payload);\r\n        const toSave = JSON.stringify(array);\r\n        localStorage.setItem('quiz_scores', toSave);\r\n    }\r\n    else {\r\n        array = JSON.parse(localStorage.getItem('quiz_scores'));\r\n        array.push(payload);\r\n        const toSave = JSON.stringify(array);\r\n        localStorage.setItem('quiz_scores', toSave);\r\n    }\r\n\r\n    const data = localStorage.getItem('quiz_scores');\r\n    highscores = JSON.parse(data);\r\n\r\n    return highscores;\r\n}\r\n\r\nexport function resetHighscores(highscores) {\r\n\r\n    localStorage.removeItem('quiz_scores');\r\n    highscores = [];\r\n    \r\n    return highscores;\r\n}","import { combineReducers } from 'redux';\r\nimport { SAVE, DELETE_QUESTION, ANSWER, NEXT_QUESTION, RESET, ADD_SCORE, RESET_SCORES } from './actions';\r\nimport { getInitialState, save, deleteQuestion, answer, nextQuestion, addNewScore, resetHighscores } from './functions';\r\n\r\nconst questionsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case SAVE:\r\n            return save(state, action.payload);\r\n        case DELETE_QUESTION:\r\n            return deleteQuestion(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst activeQuestionsReducer = (state = [], action) => {\r\n    if (action.type === NEXT_QUESTION) {\r\n        return nextQuestion(state, action.payload);\r\n    }\r\n    return state;\r\n}\r\n\r\nconst pointsReducer = (state = 0, action) => {\r\n    if (action.type === ANSWER) {\r\n        return answer(state, action.payload);\r\n    }\r\n    return state;\r\n}\r\n\r\nconst highscoresReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_SCORE:\r\n            return addNewScore(state, action.payload);\r\n        case RESET_SCORES:\r\n            return resetHighscores(state);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst combineReducer = combineReducers({\r\n    questions: questionsReducer,\r\n    activeQuestions: activeQuestionsReducer,\r\n    points: pointsReducer,\r\n    highscores: highscoresReducer,\r\n});\r\n\r\nconst resetReducer = (state, action) => {\r\n    if (action.type === RESET) {\r\n        return getInitialState();\r\n    }\r\n    return state;\r\n}\r\n\r\nconst rootReducer = (state, action) => {\r\n    const gameState = combineReducer(state, action);\r\n    const actualState = resetReducer(gameState, action);\r\n    return actualState;\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n//Selectors\r\nexport const getQuestions = ({ questions }) => ({\r\n    questions: questions\r\n});\r\n\r\nexport const getActiveQuestions = ({ activeQuestions }) => ({\r\n    activeQuestions: activeQuestions\r\n});\r\n\r\nexport const getPoints = ({ points }) => ({\r\n    points: points\r\n});\r\n\r\nexport const getHighscores = ({ highscores }) => ({\r\n    highscores: highscores\r\n})\r\n\r\nexport const getState = ({ questions, activeQuestions, points, highscores }) => ({\r\n    questions: questions,\r\n    activeQuestions: activeQuestions,\r\n    points: points,\r\n    highscores: highscores,\r\n})","//Quiz Handler actions\r\nexport const SAVE = 'SAVE';\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\r\n\r\n//Game actions\r\nexport const ANSWER = 'ANSWER';\r\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\r\n\r\nexport const RESET = 'RESET';\r\n\r\nexport const ADD_SCORE = 'ADD_SCORE';\r\nexport const RESET_SCORES = 'RESET_SCORES';\r\n\r\n//Action creators\r\nexport const save = payload => ({\r\n    type: SAVE,\r\n    payload: payload,\r\n});\r\n\r\nexport const delete_question = payload => ({\r\n    type: DELETE_QUESTION,\r\n    payload: payload,\r\n});\r\n\r\nexport const answer = payload => ({\r\n    type: ANSWER,\r\n    payload: payload,\r\n})\r\n\r\nexport const next_question = payload => ({\r\n    type: NEXT_QUESTION,\r\n    payload: payload,\r\n})\r\n\r\nexport const reset = () => ({\r\n    type: RESET,\r\n})\r\n\r\nexport const addScore = payload => ({\r\n    type: ADD_SCORE,\r\n    payload: payload,\r\n})\r\n\r\nexport const resetScores = () => ({\r\n    type: RESET_SCORES,\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header, Button, Icon, Grid, Segment, Table, Message, Divider } from 'semantic-ui-react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getHighscores } from '../../logic/reducers';\r\nimport './Home.css';\r\nimport { resetScores } from '../../logic/actions';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className='margin-top'>\r\n            <Header as='h1' textAlign='center' icon>\r\n                <Icon size='mini' name='question circle outline' />\r\n                <Header.Content>Quiz App</Header.Content>\r\n            </Header>\r\n            <Segment>\r\n                <div className='grid'>\r\n                    <Grid columns='equal' textAlign=\"center\">\r\n                        <Grid.Column>\r\n                            <Header as='h4'>Create some questions for the quiz</Header>\r\n                            \r\n                            <Link to=\"/question_handler\">\r\n                                <Button icon labelPosition='left'>\r\n                                    Question Handler\r\n                                    <Icon name='book' />\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                        <Divider vertical>Or</Divider>\r\n                        <Grid.Column>\r\n                            <Header as='h4'>Start a quiz</Header>\r\n                            \r\n                            <Link to=\"/game\">\r\n                                <Button icon labelPosition='left'>\r\n                                    Game\r\n                                    <Icon name='chess rook' />\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </div>\r\n            </Segment>\r\n\r\n            <Highscores />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Highscores = () => {\r\n    const highscores = useSelector(getHighscores).highscores;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Segment>\r\n            <Header as='h3' textAlign='center'>\r\n                Local Highscores\r\n            </Header>\r\n\r\n            {highscores.length === 0\r\n                ?\r\n                <div className='centered'>\r\n                    <Message compact content='There are no highscores yet!' style={{ width: 300 }} />\r\n                </div>\r\n                :\r\n                <div>\r\n                    <Table textAlign='center' celled>\r\n                        <Table.Header>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Score</Table.HeaderCell>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {highscores.map(h => {\r\n                                return (\r\n                                    <Table.Row>\r\n                                        <Table.Cell>{h.name}</Table.Cell>\r\n                                        <Table.Cell>{h.score}%</Table.Cell>\r\n                                    </Table.Row>\r\n                                )\r\n                            })}\r\n                        </Table.Body>\r\n                    </Table>\r\n                    <div className='centered'>\r\n                        <Button icon labelPosition='left' onClick={() => dispatch(resetScores())}>\r\n                            Reset highscores\r\n                            <Icon name='redo' />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Segment>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { List, Button, Message, Modal, Grid, Header, Icon } from 'semantic-ui-react';\r\nimport { delete_question } from '../../../logic/actions';\r\nimport { getQuestions } from '../../../logic/reducers';\r\nimport './QuestionList.css';\r\n\r\nconst QuestionList = () => {\r\n\r\n  const questions = useSelector(getQuestions).questions;\r\n\r\n  if (questions.length === 0) {\r\n    return (\r\n      <div className='centered'>\r\n        <Message className='width500' compact header='There are no questions!' content='Add some questions with the form below!' />\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className='centered'>\r\n        <List celled verticalAlign='middle' className='question-list'>\r\n          {questions.map(q => {\r\n            return (\r\n              <List.Item key={q.id} className='list-item'>\r\n                <List.Content floated='right'>\r\n                  <DeleteModal question={q} />\r\n                </List.Content>\r\n                <List.Icon name='question circle' size='large' verticalAlign='middle' />\r\n                <List.Content>\r\n                  <List.Header as='a'><QuestionModal q={q} /> </List.Header>\r\n\r\n                  <List.Description as='a'>{q.date}</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n            )\r\n          })\r\n          }\r\n        </List>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst DeleteModal = props => {\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onAggree = () => {\r\n      dispatch(delete_question(props.question.id));\r\n      setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Modal open={open} closeOnEscape={false} closeOnDimmerClick={false} trigger={<Button icon labelPosition='left' onClick={() => setOpen(true)}>Delete <Icon name='trash alternate' /></Button>} basic size='small'>\r\n      <Header icon='trash alternate' content='Delete Question' />\r\n      <Modal.Content>\r\n        <p>\r\n          Are you sure you want to delete this question?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() => setOpen(false)} basic color='red' inverted>\r\n          <Icon name='remove' /> No\r\n        </Button>\r\n        <Button onClick={() => onAggree()} color='green' inverted>\r\n          <Icon name='checkmark' /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst QuestionModal = props => (\r\n  <Modal\r\n    trigger={<p>{props.q.query}</p>}\r\n    closeIcon\r\n  >\r\n    <Modal.Content>\r\n      <Header as='h2' textAlign='center'>{props.q.query}</Header>\r\n      <Grid columns='equal' textAlign='center'>\r\n        <Grid.Column>\r\n          <h3 className='bordered'>{props.q.first}</h3>\r\n\r\n          <h3 className='bordered'>{props.q.third}</h3>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <h3 className='bordered'>{props.q.second}</h3>\r\n\r\n          <h3 className='bordered'>{props.q.fourth}</h3>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <Header as='h4' textAlign='center'>Correct: {props.q.correct}</Header>\r\n      <p>Created: {props.q.date}</p>\r\n    </Modal.Content>\r\n  </Modal>\r\n)\r\n\r\nexport default QuestionList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Card, Grid, Icon, Message } from 'semantic-ui-react';\r\nimport { save } from '../../../logic/actions';\r\nimport './QuestionForm.css'\r\n\r\nclass QuestionForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            query: '',\r\n            first: '',\r\n            second: '',\r\n            third: '',\r\n            fourth: '',\r\n            correct: null,\r\n            date: '',\r\n            error: '',\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n        this.onReset = this.onReset.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n    }\r\n\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState({ [name]: value, error: '' })\r\n    }\r\n\r\n    onSave = () => {\r\n        if (this.validateForm()) {\r\n            const _id = '_' + Math.random().toString(36).substr(2, 9);\r\n            const _date = new Date().toLocaleDateString();\r\n\r\n            this.setState({ id: _id, date: _date });\r\n        }\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({\r\n            query: '',\r\n            first: '',\r\n            second: '',\r\n            third: '',\r\n            fourth: '',\r\n            correct: null,\r\n            error: '',\r\n        });\r\n    }\r\n\r\n    validateForm = () => {\r\n        if (this.state.query !== '' && this.state.first !== '' && this.state.second !== '' && this.state.third !== '' && this.state.fourth !== '') {\r\n            let array = [];\r\n            array.push(this.state.first);\r\n\r\n            if (array.includes(this.state.second)) {\r\n                this.setState({error: 'Answers must be different!'});\r\n                return false;\r\n            }\r\n\r\n            array.push(this.state.second);\r\n            if (array.includes(this.state.third)) {\r\n                this.setState({error: 'Answers must be different!'});\r\n                return false;\r\n            }\r\n\r\n            array.push(this.state.third);\r\n            if (array.includes(this.state.fourth)) {\r\n                this.setState({error: 'Answers must be different!'});\r\n                return false;\r\n            }\r\n\r\n            if (this.state.correct === null || this.state.correct === '') {\r\n                this.setState({error: 'Correct answer not selected!'});\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            this.setState({error: 'Some fields are empty!'});\r\n            return false;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.id !== '' && this.state.date !== '') {\r\n            this.props.finalizeQuestion(this.state);\r\n\r\n            this.setState({\r\n                id: '',\r\n                query: '',\r\n                first: '',\r\n                second: '',\r\n                third: '',\r\n                fourth: '',\r\n                correct: null,\r\n                date: '',\r\n                error: '',\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { query, first, second, third, fourth, correct } = this.state;\r\n\r\n        return (\r\n            <div className='centered'>\r\n                <Card style={{ width: 900 }}>\r\n                    <Card.Content>\r\n                        <Card.Header textAlign='center'>\r\n                            Add new Question\r\n                    </Card.Header>\r\n                        <Form>\r\n                            <Form.Input onChange={this.handleChange} id='question' fluid label='Question' placeholder='Question' name='query' value={query} />\r\n\r\n                            <Form.Group widths='equal'>\r\n                                <Form.Input onChange={this.handleChange} id='first' fluid label='First answer' placeholder='First answer'\r\n                                    name='first'\r\n                                    value={first} />\r\n                                <Form.Radio name='correct' value={first} checked={correct === first} onChange={this.handleChange}></Form.Radio>\r\n\r\n                                <Form.Input onChange={this.handleChange} id='second' fluid label='Second answer' placeholder='Second answer'\r\n                                    name='second'\r\n                                    value={second} />\r\n                                <Form.Radio name='correct' value={second} checked={correct === second} onChange={this.handleChange}></Form.Radio>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group widths='equal'>\r\n                                <Form.Input onChange={this.handleChange} id='third' fluid label='Third answer' placeholder='Third answer'\r\n                                    name='third'\r\n                                    value={third} />\r\n                                <Form.Radio name='correct' value={third} checked={correct === third} onChange={this.handleChange}></Form.Radio>\r\n\r\n                                <Form.Input onChange={this.handleChange} id='fourth' fluid label='Fourth answer' placeholder='Fourth answer'\r\n                                    name='fourth'\r\n                                    value={fourth} />\r\n                                <Form.Radio name='correct' value={fourth} checked={correct === fourth} onChange={this.handleChange}></Form.Radio>\r\n                            </Form.Group>\r\n\r\n                            {this.state.error !== ''\r\n                            ? \r\n                            <Message color='red' content={this.state.error}></Message>\r\n                            : ''\r\n                            }\r\n\r\n                            <Grid columns='equal' textAlign='center' className='button-grid'>\r\n                                <Grid.Column>\r\n                                    <Form.Button icon labelPosition='left' onClick={() => this.onSave()}>\r\n                                        Save\r\n                                    <Icon name='save' />\r\n                                    </Form.Button>\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <Form.Button icon labelPosition='left' onClick={() => this.onReset()}>\r\n                                        Reset\r\n                                    <Icon name='redo' />\r\n                                    </Form.Button>\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Form>\r\n                    </Card.Content>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        finalizeQuestion: payload => dispatch(save(payload)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(QuestionForm);","import React from 'react';\r\nimport { Header, Icon, Segment } from 'semantic-ui-react';\r\nimport QuestionList from './question_list/QuestionList';\r\nimport QuestionForm from './question_form/QuestionForm';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\nimport './QuestionHandler.css'\r\n\r\nexport default function QuestionHandler() {\r\n    return (\r\n        <div className='margin-top'>\r\n            <Header as='h1' textAlign='center' icon>\r\n                <Icon size='mini' name='book' />\r\n                <Header.Content>Question Handler</Header.Content>\r\n            </Header>\r\n\r\n            <Segment>\r\n                <div className='list'><QuestionList /></div>\r\n                <QuestionForm />\r\n\r\n                <div className='centered button'>\r\n                    <Link to='/'>\r\n                        <Button icon labelPosition='left'>\r\n                            Back\r\n                        <Icon name='arrow left' />\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </Segment>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header, Button, Card, Grid, Modal } from 'semantic-ui-react';\r\nimport { getActiveQuestions, getPoints, getQuestions } from '../../logic/reducers';\r\nimport './Game.css';\r\nimport { answer, next_question, reset, addScore } from '../../logic/actions';\r\n\r\nclass Quiz extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            answered: false,\r\n            selectedAnswer: null,\r\n            correct: null,\r\n            randQuestion: this.props.activeQuestions[Math.floor(Math.random() * this.props.activeQuestions.length)],\r\n            endGame: false,\r\n            openModal: false,\r\n        }\r\n\r\n        this.onSelectAnswer = this.onSelectAnswer.bind(this);\r\n        this.clickAnswer = this.clickAnswer.bind(this);\r\n        this.clickNext = this.clickNext.bind(this);\r\n    }\r\n\r\n    onSelectAnswer = answer => {\r\n        this.setState({ selectedAnswer: answer });\r\n    }\r\n\r\n    clickAnswer = () => {\r\n        this.setState({ answered: true });\r\n\r\n        if (this.state.selectedAnswer === this.state.randQuestion.correct) this.setState({ correct: true });\r\n        else this.setState({ correct: false });\r\n\r\n        if (this.props.activeQuestions.length === 1){\r\n            const component = this;\r\n            component.setState({endGame: true});\r\n            setTimeout(function() {\r\n                component.setState({ openModal: true });\r\n            }, 800);\r\n        }\r\n    }\r\n\r\n    clickNext = () => {\r\n        this.setState({\r\n            answered: false,\r\n            selectedAnswer: null,\r\n            correct: null,\r\n            randQuestion: this.props.activeQuestions[Math.floor(Math.random() * this.props.activeQuestions.length)]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card fluid>\r\n                <Card.Content>\r\n                    <Header as='h4'>Name: {this.props.name}</Header>\r\n                    <Header as='h4'>Points: {this.props.points}</Header>\r\n                    <Card.Header as='h2' textAlign='center'>\r\n                        {this.state.randQuestion.query}\r\n                    </Card.Header>\r\n                    <Grid textAlign='center'>\r\n                        <Grid columns='equal' textAlign='center'>\r\n                            <Grid.Column>\r\n\r\n                                <div className={'answer' + (this.state.selectedAnswer === this.state.randQuestion.first ? ' selected' : '') + (this.state.selectedAnswer === this.state.randQuestion.first && !this.state.correct && this.state.answered ? ' wrong' : '') + (this.state.selectedAnswer === this.state.randQuestion.first && this.state.correct ? ' correct' : '')} onClick={!this.state.answered ? () => this.onSelectAnswer(this.state.randQuestion.first) : ''}>\r\n                                    <Header as='h3'>{this.state.randQuestion.first}</Header>\r\n                                </div>\r\n\r\n                                <div className={'answer' + (this.state.selectedAnswer === this.state.randQuestion.third ? ' selected' : '') + (this.state.selectedAnswer === this.state.randQuestion.third && !this.state.correct && this.state.answered ? ' wrong' : '') + (this.state.selectedAnswer === this.state.randQuestion.third && this.state.correct ? ' correct' : '')} onClick={!this.state.answered ? () => this.onSelectAnswer(this.state.randQuestion.third) : ''}>\r\n                                    <Header as='h3'>{this.state.randQuestion.third}</Header>\r\n                                </div>\r\n\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n\r\n                                <div className={'answer' + (this.state.selectedAnswer === this.state.randQuestion.second ? ' selected' : '') + (this.state.selectedAnswer === this.state.randQuestion.second && !this.state.correct && this.state.answered ? ' wrong' : '') + (this.state.selectedAnswer === this.state.randQuestion.second && this.state.correct ? ' correct' : '')} onClick={!this.state.answered ? () => this.onSelectAnswer(this.state.randQuestion.second) : ''}>\r\n                                    <Header as='h3'>{this.state.randQuestion.second}</Header>\r\n                                </div>\r\n\r\n                                <div className={'answer' + (this.state.selectedAnswer === this.state.randQuestion.fourth ? ' selected' : '') + (this.state.selectedAnswer === this.state.randQuestion.fourth && !this.state.correct && this.state.answered ? ' wrong' : '') + (this.state.selectedAnswer === this.state.randQuestion.fourth && this.state.correct ? ' correct' : '')} onClick={!this.state.answered ? () => this.onSelectAnswer(this.state.randQuestion.fourth) : ''}>\r\n                                    <Header as='h3'>{this.state.randQuestion.fourth}</Header>\r\n                                </div>\r\n\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div className={'centered button' + (this.state.answered ? ' hidden' : '')}>\r\n                        <Button onClick={this.state.selectedAnswer !== '' ? () => { this.clickAnswer(); this.props.onAnswer({ selected: this.state.selectedAnswer, correct: this.state.randQuestion.correct }) } : ''}>Answer</Button>\r\n                    </div>\r\n\r\n                    <div className={'centered button' + (!this.state.answered || this.state.endGame ? ' hidden' : '')}>\r\n                        <Button onClick={() => { this.props.nextQuestion(this.state.randQuestion.id); this.clickNext() }}>Next</Button>\r\n                    </div>\r\n                </Card.Content>\r\n\r\n                <EndGameModal openModal={this.state.openModal} points={this.props.points} name={this.props.name} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeQuestions: getActiveQuestions(state).activeQuestions,\r\n        points: getPoints(state).points\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAnswer: payload => dispatch(answer(payload)),\r\n        nextQuestion: payload => dispatch(next_question(payload)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n\r\nconst EndGameModal = props => {\r\n    const questionsLength = useSelector(getQuestions).questions.length;\r\n    const percent = (props.points / questionsLength) * 100;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onBackClick = payload => {\r\n        dispatch(addScore(payload));\r\n        dispatch(reset());\r\n    }\r\n\r\n    return (\r\n        <Modal open={props.openModal}>\r\n            <Modal.Content>\r\n                <Header as='h3' textAlign='center'>There are no more questions!</Header>\r\n                <h4>You scored: {props.points}/{questionsLength}</h4>\r\n                <h4>{percent}%</h4>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Link to='/'>\r\n                    <Button onClick={() => onBackClick({name: props.name, score: percent})}>Back to Home</Button>\r\n                </Link>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Header, Button, Input, Message, Icon, Segment, Popup, Label } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getQuestions, getState } from '../../logic/reducers';\r\nimport Quiz from './Quiz';\r\nimport './Game.css';\r\nimport { reset } from '../../logic/actions';\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gameStarted: false,\r\n            name: '',\r\n        }\r\n    }\r\n\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onStart = e => {\r\n        this.props.reset();\r\n        this.setState({ gameStarted: true });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.questions.length === 0) {\r\n            return (\r\n                <div className='margin-top'>\r\n                    <Header as='h1' textAlign='center' icon>\r\n                        <Icon size='mini' name='chess rook' />\r\n                        <Header.Content>Game</Header.Content>\r\n                    </Header>\r\n\r\n                    <Segment>\r\n                        <div className='centered margin-top'>\r\n                            <Message>\r\n                                <Header as='h4'>There are no questions found!</Header>\r\n                            Go to <Link to='/question_handler'>Question Handler</Link> and add some questions to start a game!\r\n                            </Message>\r\n                        </div>\r\n                        <div className='centered margin-top'>\r\n                            <Link to='/'>\r\n                                <Button icon labelPosition='left'>\r\n                                    Back\r\n                            <Icon name='arrow left' />\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Segment>\r\n                </div>\r\n            )\r\n        }\r\n        else if (!this.state.gameStarted) {\r\n            return (\r\n                <div className='margin-top'>\r\n                    <Header as='h1' textAlign='center' icon>\r\n                        <Icon size='mini' name='chess rook' />\r\n                        <Header.Content>Game</Header.Content>\r\n                    </Header>\r\n\r\n                    <Segment>\r\n                        <Header textAlign='center' as='h4'>Enter a name to start the quiz!</Header>\r\n                        <div className='centered'>\r\n                            <div>\r\n                                <Input labelPosition='right' className='name-input' name='name' placeholder='Name' onChange={this.handleChange}>\r\n                                    <Label>Name</Label>\r\n                                    <input />\r\n                                    <Label basic><Popup\r\n                                        position='center right'\r\n                                        content='Name must contain at least 3 characters!'\r\n                                        trigger={<Icon name='info circle' />}>\r\n                                    </Popup></Label>\r\n                                </Input>\r\n\r\n\r\n                                <Button icon labelPosition='right' disabled={(this.state.name === '' || this.state.name.length < 3) ? true : false} onClick={this.onStart}>\r\n                                    Start\r\n                                <Icon name='play' />\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='centered button'>\r\n                            <Link to='/'>\r\n                                <Button icon labelPosition='left'>\r\n                                    Back\r\n                            <Icon name='arrow left' />\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Segment>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='margin-top'>\r\n                    <Header as='h1' textAlign='center' icon>\r\n                        <Icon size='mini' name='chess rook' />\r\n                        <Header.Content>Game</Header.Content>\r\n                    </Header>\r\n\r\n                    <Segment>\r\n                        <Quiz name={this.state.name} />\r\n                        <Link to='/'>\r\n                            <Button icon labelPosition='left' onClick={() => this.props.reset()}>\r\n                                Back\r\n                            <Icon name='arrow left' />\r\n                            </Button>\r\n                        </Link>\r\n                    </Segment>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { reset: () => dispatch(reset()) }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { questions: getQuestions(state).questions, state: getState(state) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React from 'react';\r\nimport { Switch, Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\r\nimport Layout from './components/layout/Layout';\r\nimport Home from './components/home/Home';\r\nimport QuestionHandler from './components/question_handler/QuestionHandler';\r\nimport Game from './components/game/Game';\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n\r\n                    <Route path='/' exact>\r\n                        <Home />\r\n                    </Route>\r\n\r\n                    <Route path='/question_handler' render={(props) => <QuestionHandler {...props} />}>\r\n                    </Route>\r\n\r\n                    <Route path='/game' render={(props) => <Game {...props} />}>\r\n                    </Route>\r\n\r\n                    <Route>\r\n                        <Redirect to='/'></Redirect>\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport AppRouter from './Router';\n\nfunction App() {\n  return (\n    <AppRouter></AppRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './logic/configureStore';\nimport { getInitialState } from './logic/functions';\n\nconst store = configureStore(getInitialState());\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","import { createStore } from 'redux'\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore(state) {\r\n  const store = createStore(rootReducer, state, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n  return store\r\n}"],"sourceRoot":""}